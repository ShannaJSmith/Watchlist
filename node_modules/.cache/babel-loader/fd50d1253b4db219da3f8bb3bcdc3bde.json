{"ast":null,"code":"import _toConsumableArray from\"/Users/shannasmith/code/projects/watchlist/watchlist/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _objectSpread from\"/Users/shannasmith/code/projects/watchlist/watchlist/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";export default(function(state,action){switch(action.type){case'ADD_MOVIE_TO_WATCHLIST':return _objectSpread(_objectSpread({},state),{},{//return existing state\nwatchlist:[action.payload].concat(_toConsumableArray(state.watchlist))//changes to the state. new array with the movie data added to existing state\n});case'REMOVE_MOVIE_FROM_WATCHLIST':return _objectSpread(_objectSpread({},state),{},{// return all the movies that are not equal to the id passed\nwatchlist:state.watchlist.filter(function(movie){return movie.id!==action.payload;})});case'ADD_MOVIE_TO_WATCHED':return _objectSpread(_objectSpread({},state),{},{watchlist:state.watchlist.filter(function(movie){return movie.id!==action.payload.id;}),watched:[action.payload].concat(_toConsumableArray(state.watched))});case'MOVE_TO_WATCHLIST':return _objectSpread(_objectSpread({},state),{},{// remove movie from watched\nwatched:state.watched.filter(// action.payload.id is passed because we need the whole movie\nfunction(movie){return movie.id!==action.payload.id;}),// add movie back to watchlist\nwatchlist:[action.payload].concat(_toConsumableArray(state.watchlist))});case'REMOVE_FROM_WATCHED':return _objectSpread(_objectSpread({},state),{},{watched:state.watched.filter(function(movie){return movie.id!==action.payload;})});default:return state;}});","map":{"version":3,"sources":["/Users/shannasmith/code/projects/watchlist/watchlist/src/context/AppReducer.jsx"],"names":["state","action","type","watchlist","payload","filter","movie","id","watched"],"mappings":"2RAAA,eAAe,SAACA,KAAD,CAAQC,MAAR,CAAmB,CAChC,OAAQA,MAAM,CAACC,IAAf,EACE,IAAK,wBAAL,CACE,sCACKF,KADL,MACY;AACVG,SAAS,EAAGF,MAAM,CAACG,OAAV,4BAAsBJ,KAAK,CAACG,SAA5B,EAAwC;AAFnD,GAIF,IAAK,6BAAL,CACE,sCACKH,KADL,MAEE;AACAG,SAAS,CAAEH,KAAK,CAACG,SAAN,CAAgBE,MAAhB,CACT,SAACC,KAAD,QAAWA,CAAAA,KAAK,CAACC,EAAN,GAAaN,MAAM,CAACG,OAA/B,EADS,CAHb,GAOF,IAAK,sBAAL,CACE,sCACKJ,KADL,MAEEG,SAAS,CAAEH,KAAK,CAACG,SAAN,CAAgBE,MAAhB,CACT,SAACC,KAAD,QAAWA,CAAAA,KAAK,CAACC,EAAN,GAAaN,MAAM,CAACG,OAAP,CAAeG,EAAvC,EADS,CAFb,CAKEC,OAAO,EAAGP,MAAM,CAACG,OAAV,4BAAsBJ,KAAK,CAACQ,OAA5B,EALT,GAOF,IAAK,mBAAL,CACE,sCACKR,KADL,MAEE;AACAQ,OAAO,CAAER,KAAK,CAACQ,OAAN,CAAcH,MAAd,CACP;AACA,SAACC,KAAD,QAAWA,CAAAA,KAAK,CAACC,EAAN,GAAaN,MAAM,CAACG,OAAP,CAAeG,EAAvC,EAFO,CAHX,CAOE;AACAJ,SAAS,EAAGF,MAAM,CAACG,OAAV,4BAAsBJ,KAAK,CAACG,SAA5B,EARX,GAUF,IAAK,qBAAL,CACE,sCACKH,KADL,MAEEQ,OAAO,CAAER,KAAK,CAACQ,OAAN,CAAcH,MAAd,CAAqB,SAACC,KAAD,QAAWA,CAAAA,KAAK,CAACC,EAAN,GAAaN,MAAM,CAACG,OAA/B,EAArB,CAFX,GAIF,QACE,MAAOJ,CAAAA,KAAP,CAvCJ,CAyCD,CA1CD","sourcesContent":["export default (state, action) => {\n  switch (action.type) {\n    case 'ADD_MOVIE_TO_WATCHLIST':\n      return {\n        ...state, //return existing state\n        watchlist: [action.payload, ...state.watchlist], //changes to the state. new array with the movie data added to existing state\n      };\n    case 'REMOVE_MOVIE_FROM_WATCHLIST':\n      return {\n        ...state,\n        // return all the movies that are not equal to the id passed\n        watchlist: state.watchlist.filter(\n          (movie) => movie.id !== action.payload\n        ),\n      };\n    case 'ADD_MOVIE_TO_WATCHED':\n      return {\n        ...state,\n        watchlist: state.watchlist.filter(\n          (movie) => movie.id !== action.payload.id\n        ),\n        watched: [action.payload, ...state.watched],\n      };\n    case 'MOVE_TO_WATCHLIST':\n      return {\n        ...state,\n        // remove movie from watched\n        watched: state.watched.filter(\n          // action.payload.id is passed because we need the whole movie\n          (movie) => movie.id !== action.payload.id\n        ),\n        // add movie back to watchlist\n        watchlist: [action.payload, ...state.watchlist],\n      };\n    case 'REMOVE_FROM_WATCHED':\n      return {\n        ...state,\n        watched: state.watched.filter((movie) => movie.id !== action.payload),\n      };\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}