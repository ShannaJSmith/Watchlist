{"ast":null,"code":"export default ((state, action) => {\n  switch (action.type) {\n    case 'ADD_MOVIE_TO_WATCHLIST':\n      return { ...state,\n        //return existing state\n        watchlist: [action.payload, ...state.watchlist] //changes to the state. new array with the movie data added to existing state\n\n      };\n\n    case 'REMOVE_MOVIE_FROM_WATCHLIST':\n      return { ...state,\n        // return all the movies that are not equal to the id passed\n        watchlist: state.watchlist.filter(movie => movie.id !== action.payload)\n      };\n\n    case 'ADD_MOVIE_TO_WATCHED':\n      return { ...state,\n        watchlist: state.watchlist.filter(movie => movie.id !== action.payload.id),\n        watched: [action.payload, ...state.watched]\n      };\n\n    case 'MOVE_TO_WATCHLIST':\n      return { ...state,\n        // remove movie from watched\n        watched: state.watched.filter( // action.payload.id is passed because we need the whole movie\n        movie => movie.id !== action.payload.id),\n        // add movie back to watchlist\n        watchlist: [action.payload, ...state.watchlist]\n      };\n\n    case 'REMOVE_FROM_WATCHED':\n      return { ...state,\n        watched: state.watched.filter(movie => movie.id !== action.payload)\n      };\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/shannasmith/code/projects/watchlist/watchlist/src/context/AppReducer.jsx"],"names":["state","action","type","watchlist","payload","filter","movie","id","watched"],"mappings":"AAAA,gBAAe,CAACA,KAAD,EAAQC,MAAR,KAAmB;AAChC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,wBAAL;AACE,aAAO,EACL,GAAGF,KADE;AACK;AACVG,QAAAA,SAAS,EAAE,CAACF,MAAM,CAACG,OAAR,EAAiB,GAAGJ,KAAK,CAACG,SAA1B,CAFN,CAE4C;;AAF5C,OAAP;;AAIF,SAAK,6BAAL;AACE,aAAO,EACL,GAAGH,KADE;AAEL;AACAG,QAAAA,SAAS,EAAEH,KAAK,CAACG,SAAN,CAAgBE,MAAhB,CACRC,KAAD,IAAWA,KAAK,CAACC,EAAN,KAAaN,MAAM,CAACG,OADtB;AAHN,OAAP;;AAOF,SAAK,sBAAL;AACE,aAAO,EACL,GAAGJ,KADE;AAELG,QAAAA,SAAS,EAAEH,KAAK,CAACG,SAAN,CAAgBE,MAAhB,CACRC,KAAD,IAAWA,KAAK,CAACC,EAAN,KAAaN,MAAM,CAACG,OAAP,CAAeG,EAD9B,CAFN;AAKLC,QAAAA,OAAO,EAAE,CAACP,MAAM,CAACG,OAAR,EAAiB,GAAGJ,KAAK,CAACQ,OAA1B;AALJ,OAAP;;AAOF,SAAK,mBAAL;AACE,aAAO,EACL,GAAGR,KADE;AAEL;AACAQ,QAAAA,OAAO,EAAER,KAAK,CAACQ,OAAN,CAAcH,MAAd,EACP;AACCC,QAAAA,KAAD,IAAWA,KAAK,CAACC,EAAN,KAAaN,MAAM,CAACG,OAAP,CAAeG,EAFhC,CAHJ;AAOL;AACAJ,QAAAA,SAAS,EAAE,CAACF,MAAM,CAACG,OAAR,EAAiB,GAAGJ,KAAK,CAACG,SAA1B;AARN,OAAP;;AAUF,SAAK,qBAAL;AACE,aAAO,EACL,GAAGH,KADE;AAELQ,QAAAA,OAAO,EAAER,KAAK,CAACQ,OAAN,CAAcH,MAAd,CAAsBC,KAAD,IAAWA,KAAK,CAACC,EAAN,KAAaN,MAAM,CAACG,OAApD;AAFJ,OAAP;;AAIF;AACE,aAAOJ,KAAP;AAvCJ;AAyCD,CA1CD","sourcesContent":["export default (state, action) => {\n  switch (action.type) {\n    case 'ADD_MOVIE_TO_WATCHLIST':\n      return {\n        ...state, //return existing state\n        watchlist: [action.payload, ...state.watchlist], //changes to the state. new array with the movie data added to existing state\n      };\n    case 'REMOVE_MOVIE_FROM_WATCHLIST':\n      return {\n        ...state,\n        // return all the movies that are not equal to the id passed\n        watchlist: state.watchlist.filter(\n          (movie) => movie.id !== action.payload\n        ),\n      };\n    case 'ADD_MOVIE_TO_WATCHED':\n      return {\n        ...state,\n        watchlist: state.watchlist.filter(\n          (movie) => movie.id !== action.payload.id\n        ),\n        watched: [action.payload, ...state.watched],\n      };\n    case 'MOVE_TO_WATCHLIST':\n      return {\n        ...state,\n        // remove movie from watched\n        watched: state.watched.filter(\n          // action.payload.id is passed because we need the whole movie\n          (movie) => movie.id !== action.payload.id\n        ),\n        // add movie back to watchlist\n        watchlist: [action.payload, ...state.watchlist],\n      };\n    case 'REMOVE_FROM_WATCHED':\n      return {\n        ...state,\n        watched: state.watched.filter((movie) => movie.id !== action.payload),\n      };\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}